{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","tabInTabs","find","tab","id","rigtTabId","className","map","classNames","href","onClick","title","content","App","state","handleSwitch","setState","this","findIndex","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gPAeaA,EAAuB,SAACC,GAAW,IAAD,EACrCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAEvBC,EAAYH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAExCM,EAAYJ,EAAYA,EAAUG,GAAKN,EAAK,GAAGM,GAErD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACJ,GAAD,OACR,oBACEG,UACEE,IAAW,CACT,YAAaL,EAAIC,KAAOC,IAG5B,UAAQ,MANV,SASE,mBACEI,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHP,EAAIC,KAAOL,GAIfC,EAAcG,IARlB,SAWGA,EAAIQ,SAbFR,EAAIQ,cAoBjB,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,mBACGR,EAAKI,MAAK,SAACC,GAAD,OAAaA,EAAIC,KAAOL,YADrC,aACG,EAAkDa,cCjD9Cd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAa7BC,EAAb,4MACEC,MAAQ,CACNf,cAAeD,EAAK,GAAGM,IAF3B,EAKEW,aAAe,SAACZ,GACd,EAAKa,SAAS,CACZjB,cAAeI,EAAIC,MAPzB,4CAWE,WACE,IAAQL,EAAkBkB,KAAKH,MAAvBf,cAER,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBR,EAAKA,EAAKoB,WAAU,SAAAf,GAAG,OAAIA,EAAIC,KAAOL,MAAgBY,SAG5E,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAekB,KAAKH,MAAMf,cAC1BC,cAAeiB,KAAKF,sBAvB9B,GAAyBI,IAAMC,WCnB/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.25b42e24.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs:React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  const tabInTabs = tabs.find(tab => tab.id === selectedTabId);\n\n  const rigtTabId = tabInTabs ? tabInTabs.id : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={\n                classNames({\n                  'is-active': tab.id === rigtTabId,\n                })\n              }\n              data-cy=\"Tab\"\n              key={tab.title}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id === selectedTabId) {\n                    return;\n                  }\n\n                  onTabSelected(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab:Tab) => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype State = {\n  selectedTabId: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedTabId: tabs[0].id,\n  };\n\n  handleSwitch = (tab:Tab) => {\n    this.setState({\n      selectedTabId: tab.id,\n    });\n  };\n\n  render() {\n    const { selectedTabId } = this.state;\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">\n          {`Selected tab is ${tabs[tabs.findIndex(tab => tab.id === selectedTabId)].title}`}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={this.state.selectedTabId}\n          onTabSelected={this.handleSwitch}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}